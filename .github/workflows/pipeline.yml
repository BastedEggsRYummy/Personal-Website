name: Build T3 Site

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  #ESLINT: For linting
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18'   # or 20.x
          cache: 'npm'
        
      - run: npm ci
      
      - name: Install SARIF formatter
        run: npm i -D @microsoft/eslint-formatter-sarif
        
      - name: Run ESLint (creates SARIF + fails on warn/error)
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: |
          npx eslint src/ \
            --config eslint.config.js \
            --ext .js,.jsx,.ts,.tsx \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif \
            --max-warnings=0
        # no continue-on-error here so the job fails on issues

      # Uploads the results of a failed linting check, only if it fails
      - name: Upload SARIF to Code Scanning
        if: failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
      
      - name: Save SARIF as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-results.sarif
          retention-days: 7

  #Runs prettier and errors when there's anything wrong
  prettier:
    name: Run prettier
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18'   # or 20.x
          cache: 'npm'
        
      - run: npm ci
              
      - name: Run prettier
        run: |
          if ! npx prettier --check src/; then
            echo "prettier found formatting issues"
            exit 1
          fi
          echo "prettier looks all good"
  
  #Builds project
  build:
    name: Run build
    runs-on: ubuntu-latest
    needs: eslint
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - uses: actions/setup-node@v4
        with:
          node-version: '18.18'   # or 20.x
          cache: 'npm'
        
      - run: npm ci
              
      - name: Run build
        run: npm run build
